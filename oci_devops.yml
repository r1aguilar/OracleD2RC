version: 0.1
component: build
timeoutInSeconds: 1800        # 30 min
shell: bash
failImmediatelyOnError: true  # corta el pipeline en el primer error

steps:
  # 1. Instalar el plugin Native Image en la GraalVM que ya trae el runner
  - type: Command
    name: "Instalar GraalVM Native Image"
    command: |
      yum -y install graalvm22-ee-17-native-image

  # 2. Iniciar sesión en tu repositorio de Oracle Container Registry (OCIR)
  - type: Command
    name: "Docker Login (hard-coded)"
    command: |
      docker login mx-queretaro-1.ocir.io \
        -u "axgw2tdpave8/a01285921@tec.mx" \
        -p 'e6k)8n.:E6y[#L{5()jm'

  # 3. Compilar la aplicación Spring Boot (salta tests para acelerar)
  - type: Command
    name: "Compilar Spring Boot"
    command: |
      ./mvnw -B clean package -DskipTests

  # 4. Construir la imagen Docker
  - type: Command
    name: "Construir imagen Docker"
    command: |
      docker build -t mx-queretaro-1.ocir.io/axgw2tdpave8/mtdrspring:latest .

  # 5. Publicar la imagen en OCIR
  - type: Command
    name: "Push de imagen Docker"
    command: |
      docker push mx-queretaro-1.ocir.io/axgw2tdpave8/mtdrspring:latest

# 6. Registrar la imagen como artefacto de salida para el Deploy Pipeline
outputArtifacts:
  - name: mtdrspring_image
    type: DOCKER_IMAGE
    location: mx-queretaro-1.ocir.io/axgw2tdpave8/mtdrspring:latest
